server:
  port: 8083
spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        # 服务注册地址
        server-addr: 127.0.0.1:8848
        # 命名空间-dev
        namespace: 9c4541f6-60b5-41c9-a3fe-239a18527df8
      config:
        # 配置中心地址
        server-addr: 127.0.0.1:8848
        # 配置文件格式
        file-extension: yml
        # 共享配置
        shared-configs:
          - application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
      sentinel:
        # 取消控制台懒加载
        eager: true
        transport:
          # 控制台地址
          dashboard: 127.0.0.1:8718
        # nacos配置持久化
        datasource:
          ds1:
            nacos:
              server-addr: 127.0.0.1:8848
              dataId: yinghua-common-job
              groupId: DEFAULT_GROUP
              data-type: json
              rule-type: gw-flow
  # quartz 调度器配置
  quartz:
    job-store-type: memory #数据持久化方式，可选值：MEMORY、JDBC
    auto-startup: true   #初始化后是否自动启动计划程序,默认为  true
    overwrite-existing-jobs: true #配置的作业是否应覆盖现有的作业定义
    scheduler-name: CmiipScheduler # 计划程序的名称
    startup-delay: 10s #初始化完成后启动计划程序的延迟时间，默认为 0 秒
    wait-for-jobs-to-complete-on-shutdown: false # 关闭时是否等待正在运行的作业完成

    #对于 Quartz 自带的配置，即可以使用 quartz 自己的 quartz.properties 配置文件进行配置，也可以直接配置在 properties 属性下，它是一个 map
    #quartz 完整配置：https://wangmaoxiong.blog.csdn.net/article/details/105057405#quartz.properties%20%E4%B8%8E%20QuartzProperties%20%E9%85%8D%E7%BD%AE%E9%80%89%E9%A1%B9
    properties:
      org:
        quartz:
          jobStore:
            #如果不需要将调度命令（例如添加和删除triggers）绑定到其他事务，那么可以通过使用 JobStoreTX 管理事务
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            #设置数据库驱动代理，StdJDBCDelegate 是一个使用 JDBC 代码来执行其工作的代理. 其他代理可以在"org.quartz.impl.jdbcjobstore“包或其子包中找到
            driverDelegateClass: org.quartz.impl.jdbcjobstore.oracle.OracleDelegate
            #通知 JobStore 使用的表前缀
            tablePrefix: QRTZ_
            misfireThreshold: 12000
            #是否加入集群
            isClustered: false
            ##容许的最大作业延长时间
            clusterCheckinInterval: 20000
            maxMisfiresToHandleAtATime: 1
            txIsolationLevelSerializable: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool  #quartz 使用的线程池类型，org.quartz.spi.ThreadPool
            threadCount: 20   #线程池中的线程总个数，表示最多可以同时执行的个任务/作业个数
            threadPriority: 5   #线程优先级
            threadsInheritContextClassLoaderOfInitializingThread: true #线程继承初始化线程的上下文类加载器
          scheduler:
            #quartz 调度器实例名称，相当于微服务架构中的微服务名称，instanceId 相当于微服务多实例时的节点 id
            #如果指定了 spring.quartz.scheduler-name 属性，则优先以它为准，此时 instanceName 不会生效.
            instanceName: CmiipScheduler
            #实例id设置为自动获取，集群下的所有调度器实例id 必须为唯一.
            instanceId:
  #  数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
mybatis:
  mapper-locations: classpath:mapper/*.xml

#微信公众号
WX:
  gettokenURL: https://api.weixin.qq.com/cgi-bin/token
  #  获取素材总数
  getmaterialcountURL: https://api.weixin.qq.com/cgi-bin/material/get_materialcount
  #  获取素材列表
  batchget_materialURL: https://api.weixin.qq.com/cgi-bin/material/batchget_material
  uploadimgURL: https://api.weixin.qq.com/cgi-bin/material/add_material
  addDraftURL: https://api.weixin.qq.com/cgi-bin/draft/add
  draftSubmitURL: https://api.weixin.qq.com/cgi-bin/freepublish/submit
